{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","Robots","cardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","bind","fetch","then","response","json","users","filteredArray","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAceA,EAbF,SAACC,GACV,OAEJ,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAAUC,IAAG,+BAA0BH,EAAMI,GAAhC,iBACtB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCKHC,EAVE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAQ,cAAE,EAAF,CAAgBR,GAAII,EAAOI,GAAGR,GAAIC,KAAQG,EAAOI,GAAGP,KAAMC,MAASE,EAAOI,GAAGN,OAAhEM,MAEzB,OACI,8BACIH,KCOGI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKd,UAAY,MAAjB,SACI,uBACIA,UAAY,mCACZe,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EATE,SAACnB,GACd,OACI,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,KAArE,SACCvB,EAAMwB,YCiBAC,E,kDAnBX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACD0B,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE7B,WAEI,OAAIG,KAAKJ,MAAMC,SACJ,uDAEHG,KAAK9B,MAAMwB,a,GAfAQ,aC+CZC,G,wDAzCX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAZ1C,EAAKX,MAAQ,CACTlB,OAAQ,GACRM,YAAa,IAEjB,EAAKoB,eAAiB,EAAKA,eAAeI,KAApB,gBANZ,E,qDAQd,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEvB,OAAQmC,S,oBAM/C,WACI,MAAgCb,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV8B,EAAgBpC,EAAOqC,QAAO,SAAAC,GAChC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQvC,EAAOyC,OAIP,sBAAKhD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQoC,WAR9B,2D,GAxBMZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.77ce3630.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = (props) =>{\r\n    return (\r\n       \r\n<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n    <img alt=\"robots\"  src={`https://robohash.org/${props.id}?100Ã—100`} />\r\n    <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n    </div>\r\n\r\n</div>\r\n    );\r\n}\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n// import { Robots } from './robots'\r\nconst CardList = ({Robots}) =>{\r\n    const cardComponent = Robots.map((user,i)=>{\r\n        return  < Card key= {i} id={Robots[i].id} name = {Robots[i].name} email = {Robots[i].email} />\r\n    })\r\n    return(\r\n        <div>\r\n           {cardComponent}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from 'react'\r\n\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className = 'pa2'>\r\n            <input\r\n                className = \"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\"\r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst  Scroll  = (props) =>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: 500}}>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n         this.setState({hasError:true})\r\n    }\r\n    render() {\r\n\r\n        if (this.state.hasError) {\r\n            return <h1>Error Encountered..!!</h1>\r\n        }\r\n        return (this.props.children) \r\n\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Robots: [],\r\n            searchField: ''\r\n        }\r\n        this.onSearchChange = this.onSearchChange.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ Robots: users }))\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { Robots, searchField } = this.state\r\n        const filteredArray = Robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n        return !Robots.length ?\r\n            <h1>Loading...Please Wait</h1>\r\n            :\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                        <CardList Robots={filteredArray} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n \n import App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}